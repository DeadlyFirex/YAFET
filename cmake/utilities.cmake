macro(detectOS)
    if (WIN32)
        set(YAFET_OS "windows")
        add_compile_definitions(OS_WINDOWS)
    elseif (UNIX AND NOT APPLE)
        set(YAFET_OS "linux")
        add_compile_definitions(OS_LINUX)
        include(GNUInstallDirs)
    else ()
        message(FATAL_ERROR "Unknown / unsupported system!")
    endif()
endmacro()

macro(detectArch)
    string(FIND "${CMAKE_CXX_COMPILER}" "aarch64" RESULT1)
    string(FIND "${CMAKE_CXX_COMPILER}" "arm64" RESULT2)

    if (NOT ${RESULT1} EQUAL -1)
        set(YAFET_ARCH "aarch64")
    elseif (NOT ${RESULT2} EQUAL -1)
        set(YAFET_ARCH "aarch64")
    else ()
        if(CMAKE_SYSTEM_PROCESSOR STREQUAL "x86_64")
            set(YAFET_ARCH "x86_64")
        elseif(CMAKE_SYSTEM_PROCESSOR STREQUAL "i686")
            set(YAFET_ARCH "i686")
        elseif(CMAKE_SYSTEM_PROCESSOR MATCHES "aarch64|arm64")
            set(YAFET_ARCH "aarch64")
        else()
            message(FATAL_ERROR "Target CPU architecture is not x86_64, i686, or arm64.")
        endif()
    endif()
endmacro()

macro(generateName)
    if (YAFET_EXECUTABLE_NAME STREQUAL "null")
        set(YAFET_EXECUTABLE_NAME "YAFET-v${YAFET_VERSION}")
    endif()
endmacro()
